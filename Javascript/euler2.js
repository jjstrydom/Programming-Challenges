// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

var MaxFeb = 4e6   // maximum sequence value
var febP = 1   // Previous Fibonacci value
var febN = 1   // Next Fibonacci value
var febT = 0   // Temp Fibonacci value
var febS = 0   // Sum of even Fibonacci values

while (febN < MaxFeb) {   // While our Fibonacci value is less than 4 million
    febT = febP + febN  // Calculate the next Fibonacci value
    if (febT % 2 == 0) {  // test if the value is even
        febS = febS + febT  // if the Fibonacci value is even sum it
        console.log('Even Fibonacci value: ', febT)  // Display the even number
    }
    febP = febN  // Shift variables in prep for next calulation
    febN = febT
}

console.log('The sum is: ', febS)  // print the answer
